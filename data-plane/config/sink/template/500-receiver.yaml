---

# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-sink-receiver
  namespace: knative-eventing
  labels:
    app: kafka-sink-receiver
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-sink-receiver
  template:
    metadata:
      name: kafka-sink-receiver
      labels:
        app: kafka-sink-receiver
        eventing.knative.dev/release: devel
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      containers:
        - name: kafka-sink-receiver
          image: ${KNATIVE_KAFKA_SINK_RECEIVER_IMAGE}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /etc/config
              name: config-kafka-sink-data-plane
              readOnly: true
            - mountPath: /etc/sinks
              name: kafka-sink-sinks
              readOnly: true
            - mountPath: /tmp
              name: cache
            - mountPath: /etc/logging
              name: kafka-sink-config-logging
              readOnly: true
          env:
            - name: INGRESS_PORT
              value: "8080"
            - name: PRODUCER_CONFIG_FILE_PATH
              value: /etc/config/config-kafka-broker-producer.properties
            - name: HTTPSERVER_CONFIG_FILE_PATH
              value: /etc/config/config-kafka-broker-httpserver.properties
            - name: DATA_PLANE_CONFIG_FILE_PATH
              value: /etc/sinks/data
            - name: LIVENESS_PROBE_PATH
              value: /healthz
            - name: READINESS_PROBE_PATH
              value: /readyz
          command:
            - "java"
          args:
            - "-Dlogback.configurationFile=/etc/logging/config.xml"
            - "-jar"
            - "/app/app.jar"
          # TODO set resources (limits and requests)
          livenessProbe:
            failureThreshold: 3
            httpGet:
              port: 8080
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              port: 8080
              path: /readyz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: /dev/temination-log
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
      volumes:
        - name: kafka-sink-sinks
          configMap:
            name: kafka-sink-sinks
        - name: config-kafka-sink-data-plane
          configMap:
            name: config-kafka-sink-data-plane
        - name: cache
          emptyDir: {}
        - name: kafka-sink-config-logging
          configMap:
            name: kafka-config-logging
      restartPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: kafka-sink-ingress
  namespace: knative-eventing
spec:
  selector:
    app: kafka-sink-receiver
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
---
