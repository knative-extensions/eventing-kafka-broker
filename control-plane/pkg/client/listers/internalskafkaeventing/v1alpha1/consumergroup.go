/*
 * Copyright 2021 The Knative Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "knative.dev/eventing-kafka-broker/control-plane/pkg/apis/internalskafkaeventing/v1alpha1"
)

// ConsumerGroupLister helps list ConsumerGroups.
// All objects returned here must be treated as read-only.
type ConsumerGroupLister interface {
	// List lists all ConsumerGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ConsumerGroup, err error)
	// ConsumerGroups returns an object that can list and get ConsumerGroups.
	ConsumerGroups(namespace string) ConsumerGroupNamespaceLister
	ConsumerGroupListerExpansion
}

// consumerGroupLister implements the ConsumerGroupLister interface.
type consumerGroupLister struct {
	listers.ResourceIndexer[*v1alpha1.ConsumerGroup]
}

// NewConsumerGroupLister returns a new ConsumerGroupLister.
func NewConsumerGroupLister(indexer cache.Indexer) ConsumerGroupLister {
	return &consumerGroupLister{listers.New[*v1alpha1.ConsumerGroup](indexer, v1alpha1.Resource("consumergroup"))}
}

// ConsumerGroups returns an object that can list and get ConsumerGroups.
func (s *consumerGroupLister) ConsumerGroups(namespace string) ConsumerGroupNamespaceLister {
	return consumerGroupNamespaceLister{listers.NewNamespaced[*v1alpha1.ConsumerGroup](s.ResourceIndexer, namespace)}
}

// ConsumerGroupNamespaceLister helps list and get ConsumerGroups.
// All objects returned here must be treated as read-only.
type ConsumerGroupNamespaceLister interface {
	// List lists all ConsumerGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ConsumerGroup, err error)
	// Get retrieves the ConsumerGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ConsumerGroup, error)
	ConsumerGroupNamespaceListerExpansion
}

// consumerGroupNamespaceLister implements the ConsumerGroupNamespaceLister
// interface.
type consumerGroupNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.ConsumerGroup]
}
