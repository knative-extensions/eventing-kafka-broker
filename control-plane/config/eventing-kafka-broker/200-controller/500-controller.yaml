---

# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-controller
  namespace: knative-eventing
  labels:
    app: kafka-controller
    app.kubernetes.io/version: devel
    app.kubernetes.io/component: kafka-controller
    app.kubernetes.io/name: knative-eventing
spec:
  selector:
    matchLabels:
      app: kafka-controller
  template:
    metadata:
      name: kafka-controller
      labels:
        app: kafka-controller
        app.kubernetes.io/version: devel
        app.kubernetes.io/component: kafka-controller
        app.kubernetes.io/name: knative-eventing
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kafka-controller

      # To avoid node becoming SPOF, spread our replicas to different nodes and zones.
      topologySpreadConstraints:
        - maxSkew: 2
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: kafka-controller
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: kafka-controller
                topologyKey: kubernetes.io/hostname
              weight: 100

      containers:
        - name: controller
          image: ko://knative.dev/eventing-kafka-broker/control-plane/cmd/kafka-controller
          imagePullPolicy: IfNotPresent
          env:
            - name: BROKER_DATA_PLANE_CONFIG_MAP_NAMESPACE
              value: knative-eventing
            - name: CHANNEL_DATA_PLANE_CONFIG_MAP_NAMESPACE
              value: knative-eventing
            - name: SINK_DATA_PLANE_CONFIG_MAP_NAMESPACE
              value: knative-eventing

            - name: BROKER_CONTRACT_CONFIG_MAP_NAME
              value: kafka-broker-brokers-triggers
            - name: CHANNEL_CONTRACT_CONFIG_MAP_NAME
              value: kafka-channel-channels-subscriptions
            - name: SINK_CONTRACT_CONFIG_MAP_NAME
              value: kafka-sink-sinks

            - name: BROKER_DATA_PLANE_CONFIG_CONFIG_MAP_NAME
              value: config-kafka-broker-data-plane
            - name: SINK_DATA_PLANE_CONFIG_CONFIG_MAP_NAME
              value: config-kafka-sink-data-plane
            - name: CHANNEL_DATA_PLANE_CONFIG_CONFIG_MAP_NAME
              value: config-kafka-channel-data-plane

            - name: BROKER_CONTRACT_CONFIG_MAP_FORMAT
              value: json
            - name: CHANNEL_CONTRACT_CONFIG_MAP_FORMAT
              value: json
            - name: SINK_CONTRACT_CONFIG_MAP_FORMAT
              value: json
            - name: CONSUMER_CONTRACT_CONFIG_MAP_FORMAT
              value: json

            - name: BROKER_INGRESS_NAME
              value: kafka-broker-ingress
            - name: CHANNEL_INGRESS_NAME
              value: kafka-channel-ingress
            - name: SINK_INGRESS_NAME
              value: kafka-sink-ingress

            - name: BROKER_GENERAL_CONFIG_MAP_NAME
              value: kafka-broker-config
            - name: CHANNEL_GENERAL_CONFIG_MAP_NAME
              value: kafka-channel-config
            - name: SINK_GENERAL_CONFIG_MAP_NAME
              value: kafka-broker-config

            - name: BROKER_INGRESS_POD_PORT
              value: "8080"
            - name: CHANNEL_INGRESS_POD_PORT
              value: "8080"
            - name: SINK_INGRESS_POD_PORT
              value: "8080"

            - name: BROKER_INGRESS_POD_TLS_PORT
              value: "8443"
            - name: CHANNEL_INGRESS_POD_TLS_PORT
              value: "8443"
            - name: SINK_INGRESS_POD_TLS_PORT
              value: "8443"

            - name: BROKER_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CHANNEL_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SINK_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: BROKER_DEFAULT_BACKOFF_DELAY_MS
              value: "1000" # 1 second
            - name: CHANNEL_DEFAULT_BACKOFF_DELAY_MS
              value: "1000" # 1 second
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            # How often (in seconds) the autoscaler tries to scale down the statefulset.
            - name: AUTOSCALER_REFRESH_PERIOD
              value: '100'

            # The number of virtual replicas each adapter pod can handle.
            - name: POD_CAPACITY
              value: '20'

            - name: SCHEDULER_CONFIG
              value: 'config-kafka-scheduler'

            - name: DESCHEDULER_CONFIG
              value: 'config-kafka-descheduler'

            - name: AUTOSCALER_CONFIG
              value: 'config-kafka-autoscaler'

            - name: CONFIG_LEADERELECTION_NAME
              value: config-kafka-leader-election
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ENABLE_SARAMA_LOGGER
              value: "false"
            - name: ENABLE_SARAMA_DEBUG_LOGGER
              value: "false"
            - name: ENABLE_SARAMA_CLIENT_POOL
              value: "true"

          ports:
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: /dev/temination-log
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
