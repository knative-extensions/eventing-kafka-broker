# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-webhook-eventing
  namespace: knative-eventing
  labels:
    app: kafka-webhook-eventing
    kafka.eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-webhook-eventing
  template:
    metadata:
      labels:
        app: kafka-webhook-eventing
        kafka.eventing.knative.dev/release: devel
    spec:
      # To avoid node becoming SPOF, spread our replicas to different nodes.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: kafka-webhook-eventing
                topologyKey: kubernetes.io/hostname
              weight: 100

      serviceAccountName: kafka-webhook-eventing
      securityContext:
        runAsNonRoot: true

      containers:
        - name: kafka-webhook-eventing
          terminationMessagePolicy: FallbackToLogsOnError

          image: ko://knative.dev/eventing-kafka-broker/control-plane/cmd/webhook-kafka

          resources:
            requests:
              cpu: 20m
              memory: 20Mi
            limits:
              cpu: 200m
              memory: 200Mi

          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            - name: WEBHOOK_NAME
              value: kafka-webhook-eventing
            - name: WEBHOOK_PORT
              value: "8443"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          securityContext:
            allowPrivilegeEscalation: false

          ports:
            - name: https-webhook
              containerPort: 8443
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008

          readinessProbe: &probe
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
          livenessProbe:
            <<: *probe
            initialDelaySeconds: 20

      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-webhook-eventing
  namespace: knative-eventing
  labels:
    app: kafka-webhook-eventing
    kafka.eventing.knative.dev/release: devel
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: 8443
  selector:
    app: kafka-webhook-eventing
