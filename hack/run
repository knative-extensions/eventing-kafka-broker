#!/usr/bin/env bash

set -e

ROOT_DIR=$(dirname $0)/..

action="$1"

if [[ "$action" == "deploy-infra" ]]; then
  # Install dependencies and publish test images
	source "${ROOT_DIR}"/test/e2e-common.sh && knative_setup
elif [[ "${action}" == "teardown-infra" ]]; then
  # Delete dependencies
	source "${ROOT_DIR}"/test/e2e-common.sh && knative_teardown
elif [[ "${action}" == "deploy" ]]; then
  # Install Eventing Kafka Broker
	source "${ROOT_DIR}"/test/e2e-common.sh && test_setup
elif [[ "${action}" == "teardown" ]]; then
  # Delete Eventing Kafka Broker
	source "${ROOT_DIR}"/test/e2e-common.sh && test_teardown
elif [[ "${action}" == "unit-test" || "${action}" == "unit-tests" ]]; then
  # Run unit tests
	"${ROOT_DIR}"/test/presubmit-tests.sh --unit-tests
elif [[ "${action}" == "unit-test-data-plane" || "${action}" == "unit-tests-data-plane" ]]; then
  # Run data plane unit tests
	cd "${ROOT_DIR}"/data-plane && ./mvnw verify -B -U && cd -
elif [[ "${action}" == "unit-test-control-plane" || "${action}" == "unit-tests-control-plane" ]]; then
  # Run control-plane unit tests
	go test -race ./...
elif [[ "${action}" == "build-test" || "${action}" == "build-tests" ]]; then
  # Run build tests
	"${ROOT_DIR}"/test/presubmit-tests.sh --build-tests
elif [[ "${action}" == "integration-test" || "${action}" == "integration-tests" ]]; then
  # Run integration tests
	source "${ROOT_DIR}"/test/e2e-common.sh && go_test_e2e -timeout=30m ./test/e2e_new/...
	source "${ROOT_DIR}"/test/e2e-common.sh && go_test_e2e -timeout=30m ./test/e2e/...
	source "${ROOT_DIR}"/test/e2e-common.sh && go_test_e2e -tags=deletecm ./test/e2e/...
elif [[ "${action}" == "deploy-sacura" ]]; then
  # Install sacura resources
	source "${ROOT_DIR}"/test/e2e-common.sh && apply_sacura
elif [[ "${action}" == "sacura-test" || "${action}" == "sacura-tests" ]]; then
  # Run sacura test
	source "${ROOT_DIR}"/test/e2e-common.sh && go_test_e2e -tags=sacura -timeout=40m ./test/e2e/...
elif [[ "${action}" == "teardown-sacura" ]]; then
  # Delete sacura resources
	source "${ROOT_DIR}"/test/e2e-common.sh && delete_sacura
elif [[ "${action}" == "deploy-chaos" ]]; then
  # Chaos duck test
	export REPLICAS="3"
	source "${ROOT_DIR}"/test/e2e-common.sh && scale_controlplane kafka-controller kafka-webhook-eventing eventing-webhook eventing-controller
	source "${ROOT_DIR}"/test/e2e-common.sh && wait_until_pods_running knative-eventing
	source "${ROOT_DIR}"/test/e2e-common.sh && apply_chaos
elif [[ "${action}" == "teardown-chaos" ]]; then
  # Cleanup chaos test
	export REPLICAS="1"
	source "${ROOT_DIR}"/test/e2e-common.sh && scale_controlplane kafka-controller kafka-webhook-eventing eventing-webhook eventing-controller
	source "${ROOT_DIR}"/test/e2e-common.sh && delete_chaos
elif [[ "${action}" == "profiler" ]]; then
  # Run profiling test
	"${ROOT_DIR}"/data-plane/profiler/run.sh
elif [[ "${action}" == "generate" ]]; then
  # Run protobuf generator
	"${ROOT_DIR}"/proto/hack/generate-proto.sh
  # Run API generator
	"${ROOT_DIR}"/hack/update-codegen.sh
fi
